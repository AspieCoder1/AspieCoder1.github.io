@inproceedings{nguyenReGVDRevisitingGraph2022,
 abstract = {Identifying vulnerabilities in the source code is essential to protect the software systems from cyber security attacks. It, however, is also a challenging step that requires specialized expertise in security and code representation. To this end, we aim to develop a general, practical, and programming language-independent model capable of running on various source codes and libraries without difficulty. Therefore, we consider vulnerability detection as an inductive text classification problem and propose ReGVD, a simple yet effective graph neural network-based model for the problem. In particular, ReGVD views each raw source code as a flat sequence of tokens to build a graph, wherein node features are initialized by only the token embedding layer of a pre-trained programming language (PL) model. ReGVD then leverages residual connection among GNN layers and examines a mixture of graph-level sum and max poolings to return a graph embedding for the source code. ReGVD outperforms the existing state-of-the-art models and obtains the highest accuracy on the real-world benchmark dataset from CodeXGLUE for vulnerability detection. Our code is available at: https://github.com/daiquocnguyen/GNN-ReGVD.},
 author = {Nguyen, Van-Anh and Nguyen, Dai Quoc and Nguyen, Van and Le, Trung and Tran, Quan Hung and Phung, Dinh},
 booktitle = {Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: Companion Proceedings},
 date = {2022-10-19},
 isbn = {978-1-4503-9223-5},
 keywords = {graph neural networks,security,text classification,vulnerability detection},
 location = {New York, NY, USA},
 pages = {178--182},
 publisher = {Association for Computing Machinery},
 series = {ICSE '22},
 shorttitle = {ReGVD},
 title = {ReGVD: revisiting graph neural networks for vulnerability detection},
 url = {https://doi.org/10.1145/3510454.3516865},
 urldate = {2023-12-20}
}

@inproceedings{allamanisTypilusNeuralType2020,
 abstract = {Type inference over partial contexts in dynamically typed languages is challenging. In this work, we present a graph neural network model that predicts types by probabilistically reasoning over a program’s structure, names, and patterns. The network uses deep similarity learning to learn a TypeSpace — a continuous relaxation of the discrete space of types — and how to embed the type properties of a symbol (i.e. identifier) into it. Importantly, our model can employ one-shot learning to predict an open vocabulary of types, including rare and user-defined ones. We realise our approach in Typilus for Python that combines the TypeSpace with an optional type checker. We show that Typilus accurately predicts types. Typilus confidently predicts types for 70% of all annotatable symbols; when it predicts a type, that type optionally type checks 95% of the time. Typilus can also find incorrect type annotations; two important and popular open source libraries, fairseq and allennlp, accepted our pull requests that fixed the annotation errors Typilus discovered.},
 author = {Allamanis, Miltiadis and Barr, Earl T. and Ducousso, Soline and Gao, Zheng},
 booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
 date = {2020-06-11},
 file = {/Users/luke/Zotero/storage/4YI6YXDA/Allamanis et al. - 2020 - Typilus neural type hints.pdf},
 isbn = {978-1-4503-7613-6},
 keywords = {deep learning,graph neural networks,meta-learning,structured learning,type inference},
 location = {New York, NY, USA},
 pages = {91--105},
 publisher = {Association for Computing Machinery},
 series = {PLDI 2020},
 shorttitle = {Typilus},
 title = {Typilus: neural type hints},
 url = {https://doi.org/10.1145/3385412.3385997},
 urldate = {2023-12-19}
}
